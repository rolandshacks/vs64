{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "6502 Assembler Language Grammar",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#meta"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#constants-numeric"
		}

	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.semicolon",
					"begin": ";",
					"end": "$",
					"comment": "Single line comment"
				},
				{
					"name": "comment.line.double-slash",
					"begin": "//",
					"end": "$",
					"comment": "Single line comment"
				},
				{
					"name": "comment.block",
					"begin": "/\\*",
					"end": "\\*/",
					"comment": "Block comment"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.asm",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.asm",
					"match": "\\\\."
				}
			]
		},
		"meta": {
			"patterns": [
				{
					"name": "entity.name.function",
					"match": "\\b(\\w+)\\:"
				}
			]
		},
		"meta-macro-call": {
			"patterns": [
				{
					"name": "entity.name.function.macro",
					"match": "\\+(\\w+)\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"include": "#keywords-instructions"
				},
				{
					"include": "#keywords-instructions-program-counter"
				},
				{
					"include": "#keywords-control"
				},
				{
					"include": "#keywords-illegal"
				}
			]
		},
		"keywords-instructions": {
			"patterns": [
				{
					"name": "keyword.instructions",
					"match": "(?i)[\\s]*\\b(adc|and|asl|bit|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|sbc|sec|sed|sei|sta|stx|sty|tax|txa|tay|tya|tsx|txs)\\b"
				}
			]
		},
		"keywords-instructions-program-counter": {
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "keyword.instructions"
						}
					},
					"match": "(\\*=)"
				}
			]
		},
		"keywords-control": {
			"patterns": [
				{
					"name": "keyword.control",
					"match": "(?i)[\\s]*\\b(bcc|bcs|beq|bmi|bne|bpl|brk|bvc|bvs|jmp|jsr|rti|rts)\\b"
				}
			]
		},
		"keywords-illegal": {
			"patterns": [
				{
					"name": "keyword.illegal",
					"match": "(?i)[\\s]*\\b(slo|rla|sre|rra|sax|lax|dcp|isc|anc|asr|arr|sbx|dop|top|jam)\\b"
				}
			]
		},
		"constants-numeric": {
			"patterns": [
				{
					"match": "#?\\$[0-9a-fA-F]+\\b",
					"name": "constant.numeric.hex"
				},
				{
					"match": "#?\\%[0-1]+\\b",
					"name": "constant.numeric.bin"
				},
				{
					"match": "#?[0-9]+\\b",
					"name": "constant.numeric.dec"
				},
				{
					"match": "#?\\&[0-7]+\\b",
					"name": "constant.numeric.oct"
				}
			]
		}
	},
	"scopeName": "source.asm"
}
